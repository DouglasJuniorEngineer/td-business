table 2_1_cycles
	lineageTag: 7f0a19e2-d5eb-41dc-8d80-9e96d61ff1c4

	column ciclo
		dataType: int64
		formatString: 0
		lineageTag: 148f8dec-2fb6-4889-977c-ee87546f7827
		summarizeBy: none
		sourceColumn: ciclo

		annotation SummarizationSetBy = Automatic

	column 'Ordem ciclos'
		dataType: string
		lineageTag: 2c980bb5-11ec-470e-9f96-683a12c75a76
		summarizeBy: none
		sourceColumn: Ordem ciclos
		sortByColumn: ciclo

		changedProperty = SortByColumn

		annotation SummarizationSetBy = Automatic

	partition 2_1_cycles = m
		mode: import
		queryGroup: 02_dimensions
		source =
				let
				    base_cycles = List.Sort(
				        List.Distinct(
				            List.Buffer(#"2_2_calendar"[ciclo])
				        )
				        ,Order.Descending
				    )
				    ,table_cycles = Table.FromList(
				        base_cycles
				        ,Splitter.SplitByNothing()
				        ,{"ciclo"}
				        ,type table
				    )
				    ,columns_names = Table.ColumnNames(table_cycles)
				    ,int_column = {
				        List.First(columns_names)
				    }
				    ,int_type = List.Transform(
				        int_column
				        ,each {_, each Number.From(_), Int64.Type}
				    )
				    ,transform_type = Table.TransformColumns(
				        table_cycles
				        ,int_type
				    )
				    ,actual_cycle = List.Max(transform_type[ciclo])
				    ,actual_cycle_text = Table.AddColumn(
				        transform_type,
				        "Ordem ciclos"
				        ,each
				            if [ciclo] = actual_cycle
				            then "Atual"
				            else Text.From([ciclo])
				        ,type text
				    )
				in
				    actual_cycle_text

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

